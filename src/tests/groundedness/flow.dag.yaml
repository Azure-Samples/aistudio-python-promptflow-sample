id: QnA_groundedness_eval
name: QnA Groundedness Evaluation
environment:
  python_requirements_txt: requirements.txt
inputs:
  question:
    type: string
    default: What feeds all the fixtures in low voltage tracks instead of each light
      having a line-to-low voltage transformer?
  context:
    type: string
    default: Track lighting, invented by Lightolier, was popular at one period of
      time because it was much easier to install than recessed lighting, and
      individual fixtures are decorative and can be easily aimed at a wall. It
      has regained some popularity recently in low-voltage tracks, which often
      look nothing like their predecessors because they do not have the safety
      issues that line-voltage systems have, and are therefore less bulky and
      more ornamental in themselves. A master transformer feeds all of the
      fixtures on the track or rod with 12 or 24 volts, instead of each light
      fixture having its own line-to-low voltage transformer. There are
      traditional spots and floods, as well as other small hanging fixtures. A
      modified version of this is cable lighting, where lights are hung from or
      clipped to bare metal cables under tension
  answer:
    type: string
    default: The main transformer is the object that feeds all the fixtures in low
      voltage tracks.
outputs:
  gpt_groundedness:
    type: object
    reference: ${concat_scores.output.gpt_groundedness}
nodes:
- name: groundedness_score
  type: llm
  source:
    type: code
    path: groundedness_score.jinja2
  inputs:
    context: ${inputs.context}
    answer: ${inputs.answer}
    max_tokens: 256
    deployment_name: gpt-35-turbo-1106
    temperature: 0
  connection: new OpenAI Connection
  api: chat
- name: concat_scores
  type: python
  source:
    type: code
    path: concat_scores.py
  inputs:
    groundesness_score: ${groundedness_score.output}
- name: aggregate_variants_results
  type: python
  source:
    type: code
    path: aggregate_variants_results.py
  inputs:
    results: ${concat_scores.output}
  aggregation: true
